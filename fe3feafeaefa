--[[
    Strongest Battleground Script Template
    Author: xX02Andres08xX/Seablue
    Credit to: xX02Andres08xX/Seablue for template
]]--

--[[Move Names]]

local function setMoveName(slot, name)
    local player = game.Players.LocalPlayer
    local playerGui = player.PlayerGui
    local hotbar = playerGui:FindFirstChild("Hotbar")
    local backpack = hotbar:FindFirstChild("Backpack")
    local hotbarFrame = backpack:FindFirstChild("Hotbar")
    local baseButton = hotbarFrame:FindFirstChild(tostring(slot)).Base
    local ToolName = baseButton.ToolName
    ToolName.Text = name
end

setMoveName(1, "")
setMoveName(2, "Attract")
setMoveName(3, "Red")
setMoveName(4, "Vertical Kick")

--[[Change Health Text]]

local function updateHealthText()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if screenGui then
        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
        if magicHealthFrame then
            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")
            if textLabel then
                textLabel.Text = "E"
            end
        end
    end
end

game.Players.LocalPlayer.PlayerGui.DescendantAdded:Connect(updateHealthText)
updateHealthText()

--[[Animations]]

local function playAnimation(animationId, replacementId, startTime, speed, duration)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    humanoid.AnimationPlayed:Connect(function(animationTrack)
        if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
            for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end

            local AnimAnim = Instance.new("Animation")
            AnimAnim.AnimationId = "rbxassetid://" .. replacementId
            local Anim = humanoid:LoadAnimation(AnimAnim)

            Anim:Play()
            Anim.TimePosition = startTime or 0
            Anim:AdjustSpeed(speed or 1)

            if duration then
                delay(duration, function()
                    Anim:Stop()
                end)
            end
        end
    end)
end

-- Define animations with their parameters (animationId, replacementId, startTime, speed, duration)
playAnimation(10468665991, 13501296372, 0, 1)  -- Move 1
playAnimation(10466974800, 13560306510, 0, 1)  -- Move 2
playAnimation(10471336737, 13071982935, 0.3, 1, 1.8)  -- Move 3
playAnimation(12510170988, 18897538537, 0, 1)  -- Move 4
playAnimation(18715881168, 17861893708, 0.3, 0.9)  -- Ult Move 1
playAnimation(18715884857, 18715829082, 2, 1)  -- Ult Move 2
playAnimation(18715898844, 13071982935, 0.3, 1, 1.8)  -- Ult Move 3
playAnimation(12510170988, 16515850153, 0, 1)  -- Ult Move 4

--[[Additional Animations]]
playAnimation(10479335397, 13294790250, 0, 1.3, 1.8)  -- Dash
playAnimation(10503381238, 14900168720, 1.3, 0.7)  -- Uppercut
playAnimation(10470104242, 12447247483, 0, 6)  -- Downslam

--[[Punch Replacements]]

local replacementAnimations = {
    ["10469493270"] = "rbxassetid://17889458563", -- Punch 1
    ["10469630950"] = "rbxassetid://17889461810", -- Punch 2
    ["10469639222"] = "rbxassetid://17889471098", -- Punch 3
    ["10469643643"] = "rbxassetid://17889290569", -- Punch 4
    ["17859015788"] = "rbxassetid://12684185971", -- Punch IDK
    ["11365563255"] = "rbxassetid://14516273501"  -- Punch IDK
}

local function replacePunchAnimations(animationIdsToStop, replacementAnimations)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local function playReplacementAnimation(animationId)
        local replacementAnimationId = replacementAnimations[tostring(animationId)]
        if replacementAnimationId then
            local AnimAnim = Instance.new("Animation")
            AnimAnim.AnimationId = replacementAnimationId
            local Anim = humanoid:LoadAnimation(AnimAnim)
            Anim:Play()
        end
    end

    humanoid.AnimationPlayed:Connect(function(animationTrack)
        local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))
        if animationIdsToStop[animationId] then
            animationTrack:Stop()
            playReplacementAnimation(animationId)
        end
    end)
end

replacePunchAnimations({[10469493270] = true, [10469630950] = true, [10469639222] = true, [10469643643] = true, [17859015788] = true}, replacementAnimations)

--[[Base64 Decoding Function]]
local function decodeBase64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r, f = '', (b:find(x) - 1)
        for i = 6, 1, -1 do r = r .. (f % 2^i - f % 2^(i - 1) > 0 and '1' or '0') end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c = 0
        for i = 1, 8 do c = c + (x:sub(i, i) == '1' and 2^(8 - i) or 0) end
        return string.char(c)
    end))
end

--[[UI Display with Base64 Decoding]]

local sG = Instance.new("ScreenGui")
sG.Name = "UIContainer"
sG.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local tL = Instance.new("TextLabel")
tL.Size = UDim2.new(1, 0, 0, 50)
tL.Position = UDim2.new(0, 0, 0, 0)
tL.BackgroundTransparency = 1
tL.Text = decodeBase64("Q3JlZGl0cyB0byB4eDAyQW5kcmVzMDh4eC9TZWFibHVlIGZvciB0ZW1wbGF0ZQ==")
tL.TextColor3 = Color3.new(1, 1, 1)
tL.Font = Enum.Font.Arcade
tL.TextScaled = true
tL.TextTransparency = 0.9
tL.Parent = sG
